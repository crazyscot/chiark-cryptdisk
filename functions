#

cd /root/crypt-disk-backup

fail () { echo >&2 "$*"; exit 127; }

. config

case "$dev" in
*" "*)	fail "more than one possible device: $dev" ;;
'')	fail "no devices" ;;
*)	;;
esac

echo "using device $dev"
echo "using devmapper name $mapname"
echo "using mountpoint $mnt"

mkdir -p -m700 tmp $mnt

our_dd () { dd "$@" 2>&1 |dd_seddery; test "${PIPESTATUS[*]}" = "0 0"; }

carelessly () { "$@" 2>/dev/null ||:; }

dd_seddery () { sed -e '
	/^[0-9][0-9]*+[0-9][0-9]* records \(in\|out\)/d;
	/^[0-9][0-9]* bytes transferred in .* seconds/d;
'; }

do_dmsetup () {
	carelessly undo_mount
	carelessly undo_dmsetup
	grep " $dev\$" /proc/partitions >tmp/dev-partition
	read <tmp/dev-partition major minor size
	cryptsetup create -c aes -d keys/$1 -o 1 $mapname /dev/$dev
}
undo_dmsetup () {
	dmsetup remove $mapname
}

do_mount () {
	mount -t $fstype "$@" /dev/mapper/$mapname $mnt
}
undo_mount () {
	umount /dev/mapper/$mapname
}

do_identify () {
	printf 'reading partition table... '
	our_dd count=1 if=/dev/$dev of=tmp/dev-parttable
	echo done.
	our_dd if=tmp/dev-parttable of=tmp/dev-identifier-magic bs=1 count=16
	cmp tmp/dev-identifier-magic keys/identifier-magic.bin
	echo 'identifier magic is correct.'
	our_dd if=tmp/dev-parttable of=tmp/key-id.bin bs=1 count=16 skip=16
	bin2hex tmp/key-id
	keyid=`cat tmp/key-id.hex`
	if ! test -f keys/$keyid; then
		printf >&2 'disk uses key %s which we do not have.\n' $keyid
		exit 127
	fi
	printf 'disk uses key %s\n' $keyid
}

bin2hex () {
	hexdump -e '16 1 "%02x" "\n"' <$1.bin >$1.hex
}

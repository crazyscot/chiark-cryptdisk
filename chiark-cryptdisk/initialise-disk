#!/bin/bash
set -e
. /usr/lib/chiark-cryptdisk/functions

fill=false
case "$1" in
--fill) fill=true; shift;;
esac
test $# = 1 || fail "usage: .../initialise_disk [--fill] disk-id"
disk_id="$1"

our_dd count=1 if=/dev/$dev of=${TMP}/dev-parttable
our_dd count=1 if=/dev/zero of=${TMP}/zero-parttable
our_dd count=1 if=/dev/zero of=${TMP}/magiconly-parttable
cat ${KEYS}/identifier-magic.bin 1<>${TMP}/magiconly-parttable
cmp ${TMP}/dev-parttable ${TMP}/zero-parttable || \
 cmp ${TMP}/dev-parttable ${TMP}/magiconly-parttable

echo "disk blank check successful"
our_dd if=/dev/urandom of=${TMP}/new-boot-sector count=1
cat ${KEYS}/identifier-magic.bin ${KEYS}/current-key-id.bin 1<>${TMP}/new-boot-sector

kill_dmsetup=:
kill_mount=:
trap 'set +e; $kill_dmsetup; $kill_mount; exit 127' 0

kill_dmsetup='carelessly undo_dmsetup'
do_dmsetup `cat ${KEYS}/current-key-id.hex`

if $fill; then
	printf "zeroing... "
	our_dd if=/dev/zero of=/dev/mapper/$mapname
	echo done.
fi

printf "making %s filesystem... " "$fstype"
nice mkfs -t $fstype $mkfs_fs_options /dev/mapper/$mapname
echo done.

printf "writing disk-id %s... " "$disk_id"

kill_mount='carelessly undo_mount'
do_mount
echo "$disk_id" >$mnt/disk-id
echo done.

printf "finishing ... "
undo_mount
kill_mount=:
undo_dmsetup
kill_dmsetup=:
our_dd if=${TMP}/new-boot-sector of=/dev/$dev

echo done.
trap '' 0
echo 'all done.'
